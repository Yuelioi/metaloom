// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import { Call as $Call, CancellablePromise as $CancellablePromise, Create as $Create } from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

export function GetExplorer(): $CancellablePromise<$models.NavigationItem[]> {
    return $Call.ByID(3494240658).then(($result: any) => {
        return $$createType1($result);
    });
}

export function GetMetaData(imagePath: string): $CancellablePromise<$models.Metadata> {
    return $Call.ByID(1210508552, imagePath).then(($result: any) => {
        return $$createType2($result);
    });
}

export function OpenFolderDialog(): $CancellablePromise<string> {
    return $Call.ByID(906033735);
}

/**
 * 浏览器切换子文件夹
 */
export function ShowExplorerItems(path: string): $CancellablePromise<$models.NavigationItem[]> {
    return $Call.ByID(298193483, path).then(($result: any) => {
        return $$createType1($result);
    });
}

export function ShowFolders(path: string): $CancellablePromise<$models.DirectoryContent> {
    return $Call.ByID(409124991, path).then(($result: any) => {
        return $$createType3($result);
    });
}

export function ShowImage(path: string): $CancellablePromise<$models.Image> {
    return $Call.ByID(1663014315, path).then(($result: any) => {
        return $$createType4($result);
    });
}

// Private type creation functions
const $$createType0 = $models.NavigationItem.createFrom;
const $$createType1 = $Create.Array($$createType0);
const $$createType2 = $models.Metadata.createFrom;
const $$createType3 = $models.DirectoryContent.createFrom;
const $$createType4 = $models.Image.createFrom;
